= javascript_include_tag "ext/lib/ux/treegrid/TreeGridSorter.js"
= javascript_include_tag "ext/lib/ux/treegrid/TreeGridColumnResizer.js"
= javascript_include_tag "ext/lib/ux/treegrid/TreeGridNodeUI.js"
= javascript_include_tag "ext/lib/ux/treegrid/TreeGridLoader.js"
= javascript_include_tag "ext/lib/ux/treegrid/TreeGridColumns.js"
= javascript_include_tag "ext/lib/ux/treegrid/TreeGrid.js"

#courses-container

:erb
	<script>
		var selectedTutor;
		var selectedSubject;

		var tutorsStore = new Ext.data.Store({ 
			reader: new Ext.data.JsonReader({ 
				fields: ['id', 'name'],
				root: 'rows'
			}), 
			proxy: new Ext.data.HttpProxy({
				url: '/tutors.json'
			}),
			autoLoad: true
		});

		var tree = new Ext.ux.tree.TreeGrid({
		        title: '<%= t("subjects_list") %>',
		        width: 600,
		        height: 400,
		        renderTo: Ext.get('courses-container'),
		        enableDD: false,
				tbar: [
					{ 
						text: "<%= t('add') %>", 
						iconCls: "add-icon", 
						menu: [
							{ 
								text: "<%= t('add_subject') %>", 
								iconCls: "subject-icon",
								handler: function() { 
									subjectWindow.buttons[1].hide();
									subjectWindow.buttons[0].show();				
									subjectWindow.show(); 
								} 
							},
							{ 
								text: "<%= t('add_course') %>", 
								iconCls: "group-icon",
								handler: function() { 
									parent = tree.getSelectionModel().getSelectedNode();
									courseWindow.get('subject-field').setValue(parent.attributes.name);
									courseWindow.show();
								} 
							}
						]
					},
					{ text: "<%= t('delete') %>", iconCls: "delete-icon", handler: deleteButtonHandler },
					{ text: "<%= t('edit') %>", iconCls: "edit-icon", handler: editButtonHandler }
				],
		        columns:[
				{
		            header: '<%= t("subject") %>',
		            dataIndex: 'name',
		            width: 230
		        },{
		            header: '<%= t("description") %>',
		            width: 100,
		            dataIndex: 'description',
		            align: 'center',
		            sortType: 'asFloat'
		        },{
					header: '<%= t("tutor") %>',
					dataIndex: 'tutorName'
				}],
				requestMethod: 'get',
		        dataUrl: '/courses.json'
		});

		var groups = new Ext.tree.TreePanel({
			useArrows: true,
			width: 200,
			height: 200,
			animate: true,
			enableDD: false,
			autoScroll: true,
			containerScroll: true,
			border: true,
			requestMethod: 'GET',
			dataUrl: '/groups.json',
			fieldLabel: "<%= t('group') %>",
			root: {
				nodeType: 'async',
				text: "<%= t('people') %>",
				draggable: false,
				id: '1'
			}
		});

		var courseWindow = new Ext.Window({ 
			layout: 'form',
			title: "<%= t('course') %>",
			height: 300, 
			width: 400,
			resizable: false,
			closeAction: 'hide',
			items: [
				{ 
					xtype: 'combo', 
					fieldLabel: "<%= t('tutor') %>", 
					id: 'tutor-field',
					store: tutorsStore,
					mode: 'local',
					displayField: 'name',
					onSelect: function(record) {
						courseWindow.get('tutor-field').setValue(record.data.name);
						selectedTutor = record.data.id;
					}
				}, { 
					xtype: 'textfield', 
					fieldLabel: "<%= t('subject') %>", 
					id: "subject-field",
					readOnly: true 
				}, groups
			],
			buttons: [
				{
					text: "<%= t('apply') %>",
					id: 'apply-btn',
					handler: addCourseHandler,
				},{
					text: "<%= t('update') %>",
					id: 'update-btn',
					handler: updateCourseHandler,
					hidden: true
				},{
					text: "<%= t('cancel') %>",
					handler: cancelCourseHandler
				}
			] 
		});

		var subjectWindow = new Ext.Window({
			layout: 'form',
			title: "<%= t('subject') %>",
			height: 150,
			width: 300,
			resizable: false,
			closeAction: 'hide',
			items: [
				{ xtype: 'textfield', fieldLabel: "<%= t('subject_name') %>", id: "subject-name-field" },
				{ xtype: 'textfield', fieldLabel: "<%= t('subject_desc') %>", id: "subject-desc-field" }
			],
			buttons: [
				{
					text: "<%= t('apply') %>",
					id: 'subject-apply-btn',
					handler: addSubjectHandler,
				},{
					text: "<%= t('update') %>",
					id: 'subject-update-btn',
					handler: updateSubjectHandler,
					hidden: true
				},{
					text: "<%= t('cancel') %>",
					handler: cancelSubjectHandler
				}
			]
		});

		function editButtonHandler() {
			var node = tree.getSelectionModel().getSelectedNode();
			if (node != null) {
				if (node.attributes.type == 'subject') {
					subjectWindow.get('subject-name-field').setValue(node.attributes.name);
					subjectWindow.get('subject-desc-field').setValue(node.attributes.description);
					subjectWindow.buttons[0].hide();
					subjectWindow.buttons[1].show();				
					subjectWindow.show();
				} else {
					alert('Not implemented yet!');
				}
			}
		}

		function deleteButtonHandler() {
			var node = tree.getSelectionModel().getSelectedNode();
			if (node != null) {
				if (!node.leaf) {
					Ext.Ajax.request({
						method: 'delete',
						url: '/subjects/' + node.id,
						params: {
							id: node.id
						},
						success: function() {
							node.remove();
						}
					});				
				} else {
					alert('not implemented yet');
				}
			}
		}

		function addSubjectHandler() {
			Ext.Ajax.request({
				method: 'post',
				url: '/subjects',
				params: {
					name: subjectWindow.get('subject-name-field').getValue(),
					desc: subjectWindow.get('subject-desc-field').getValue()
				},
				success: function(response) {
					newId = response.responseText;
					parent = tree.getSelectionModel().getSelectedNode();
					if (parent == null) {
						parent = tree.getRootNode();
					}
					parent.appendChild(new Ext.tree.TreeNode({
						id: newId,
						name: subjectWindow.get('subject-name-field').getValue(),
						description: subjectWindow.get('subject-desc-field').getValue(),
						type: 'subject',
						iconCls: 'subject-icon'
					}));
					clearSubjectWindow();
				}
			});
		}

		function clearSubjectWindow() {
			subjectWindow.get("subject-name-field").setValue('');
			subjectWindow.get("subject-desc-field").setValue('');
			subjectWindow.hide();
		}

		function clearCourseWindow() {
			courseWindow.get("tutor-field").setValue('');
			courseWindow.get("subject-field").setValue('');
			courseWindow.hide();
		}

		function updateSubjectHandler() {
			var node = tree.getSelectionModel().getSelectedNode();
			Ext.Ajax.request({
				method: "put",
				url: "/subjects/" + node.id,
				params: {
					name: subjectWindow.get('subject-name-field').getValue(),
					desc: subjectWindow.get('subject-desc-field').getValue(),
					id: node.id
				},
				success: function(response) {
					node.attributes.name = subjectWindow.get('subject-name-field').getValue();
					node.setText(subjectWindow.get('subject-name-field').getValue());
					node.attributes.description = subjectWindow.get('subject-desc-field').getValue();
					clearSubjectWindow();
					subjectWindow.hide();
				}
			});
		}

		function cancelSubjectHandler() {
			clearSubjectWindow();
		}

		function addCourseHandler() {
			subject_id = selectedSubject;
			tutor_id = selectedTutor;

			parentSubject = tree.getSelectionModel().getSelectedNode();
			group_id = groups.getSelectionModel().getSelectedNode().id.slice(0, -1);
			Ext.Ajax.request({
				method: 'post',
				url: '/courses',
				params: {
					subject: subject_id,
					group: group_id,
					tutor: tutor_id
				},
				success: function(response) {
					newId = response.responseText;				
					parentSubject.appendChild(new Ext.tree.TreeNode({
						id: newId,
						name: courseWindow.get('subject-field').getValue(),
						iconCls: 'group-icon'
					}));
					clearCourseWindow();
				}
			});			
		}

		function updateCourseHandler() {

		}

		function cancelCourseHandler() {
			clearCourseWindow();
		}

		tree.on('click', function(node, eventO) { selectedSubject = node.id; });
	</script>