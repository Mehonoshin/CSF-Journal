<script>

Ext.onReady(function() {
	
	var Tree = Ext.tree;
    var tree = new Tree.TreePanel({
        useArrows: true,
        autoScroll: true,
		width: 200,
        animate: true,
        enableDD: true,
        containerScroll: true,
        border: true,
        dataUrl: '/gettree',

        root: {
            nodeType: 'async',
            text: 'People',
            draggable: false,
            id: '1'
        }
    });

	var contextMenu = new Ext.menu.Menu({
		items: [
			{ text: 'Add user', handler: addHandler },
			{ text: 'Add group', handler: addGroupHandler },
			{ text: 'Edit', handler: editHandler },
			{ text: 'Delete', handler: deleteHandler },
			{ text: 'Copy', handler: copyHandler },
			{ text: 'Paste', handler: pasteHandler, disabled: "true" }						
		]
	});
	
	var studentWindow = new Ext.Window({ 
		layout: 'form',
		height: 200, 
		width: 300,
		resizable: false,
		closeAction: 'hide',
		items: [
			{ xtype: 'textfield', fieldLabel: 'Name' },
			{ xtype: 'textfield', fieldLabel: 'Student number' },			
		] 
	});
	
	var selectedNode;
	
	function treeContextHandler(node) { 
		node.select(); 
		if (node.leaf == 'true') {
			contextMenu.get(0).hide();
			contextMenu.get(1).hide();
		} else {
			contextMenu.get(0).show();
			contextMenu.get(1).show();
		}
		if (selectedNode) {
			contextMenu.get(5).enable();
		} else {
			contextMenu.get(5).disable();
		}
		contextMenu.show(node.ui.getAnchor());
	}

	function addGroupHandler() {
		var parent = tree.getSelectionModel().getSelectedNode();
		var newId;
		var newDesc;
		Ext.Msg.prompt("Create group?", "Type group description", function (btn, text) {
			newDesc = text;
			Ext.Ajax.request({ 
				url: '/addgroup',
				success: function (response) {
					newId = response.responseText;
				},
				params: {
					desc: text,
					parentid: parent.id
				} 
			});
			parent.appendChild(new Ext.tree.TreeNode({
				id: newId,
				text: newDesc
			}));
		});
	}
	
	function copyHandler() {
		selectedNode = tree.getSelectionModel().getSelectedNode();		
	}
	
	function pasteHandler() {
		var parent = tree.getSelectionModel().getSelectedNode();
		if ( ! parent.leaf ) {
			var currentNodeId = selectedNode.id;
			var newParent = parent.id;
			var isLeaf = selectedNode.leaf;
			parent.appendChild(new Ext.tree.TreeNode(selectedNode.attributes));			
			Ext.Ajax.request({ 
				url: '/copy', 
				params: {
					nodeid: currentNodeId, 
					newparentid: newParent,
					leaf: isLeaf,
					append: 'true'
				}
			});
			selectedNode = null;
		}
	}
	
	function deleteHandler() { 
		var node = tree.getSelectionModel().getSelectedNode();
		Ext.Ajax.request({ 
			url: '/delete', 
			params: {
				nodeid: node.id, 
				leaf: node.leaf
			} 
		});
		tree.getSelectionModel().getSelectedNode().remove();
	}
	
	function addHandler() {
		studentWindow.title = 'Add student';
		studentWindow.show();
	}	
	
	function editHandler() {
		var node = tree.getSelectionModel().getSelectedNode();
		if (node.leaf != 'true') {
			Ext.Msg.prompt("Edit group?", 'Edit groups description', function (btn, text) {
				Ext.Ajax.request({ 
					url: '/updategroup', 
					params: {
						nodeid: node.id, 
						desc: text
					} 
				});
				node.setText(text);
			}, null, null, node.attributes.text);
		} else {
			studentWindow.title = 'Edit student';
			studentWindow.show();	
		}		
	}
	function copyMouseHandler(de) {
		if (de.rawEvent.ctrlKey) {
			de.dropNode = new Ext.tree.TreeNode(de.dropNode.attributes);
			var newParent = de.target.id;
			var currentNodeId = de.dropNode.id;
			var isLeaf = de.leaf;
			Ext.Ajax.request({ 
				url: '/copy', 
				params: {
					nodeid: currentNodeId, 
					newparentid: newParent,
					leaf: isLeaf,
					append: 'true'
				} 
			});						
		}
		return true;
	}

    tree.render('tree-div');
    tree.getRootNode().expand();
	
	tree.on('beforemovenode', function(tree, node, oldParent, newParent, index) {
		if ( !newParent.leaf ) {
			Ext.Ajax.request({ 
				url: '/move', 
				params: {
					nodeid: node.id, 
					newparentid: newParent.id, 
					oldparentid: oldParent.id, 
					dropindex: index,
					leaf: node.leaf
				} 
			});			
		} else {
			Ext.Msg.alert("Error", "You can't move group to user");
			return false;
		}
	});	
	tree.on('contextmenu', treeContextHandler);
	tree.on("beforenodedrop", copyMouseHandler);
});
</script>

<div id="tree-div"></div>
<div id="sel">-</div>