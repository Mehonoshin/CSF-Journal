<script>

Ext.onReady(function() {
	
	var Tree = Ext.tree;
    var tree = new Tree.TreePanel({
        useArrows: true,
        autoScroll: true,
		width: 200,
        animate: true,
        enableDD: true,
        containerScroll: true,
        border: true,
        dataUrl: '/gettree',

        root: {
            nodeType: 'async',
            text: 'People',
            draggable: false,
            id: '1'
        }
    });

	var contextMenu = new Ext.menu.Menu({
		items: [
			{ text: 'Add', handler: addHandler },
			{ text: 'Edit', handler: editHandler },
			{ text: 'Delete', handler: deleteHandler },
			{ text: 'Copy', handler: copyHandler },
			{ text: 'Paste', handler: pasteHandler }						
		]
	});
	
	var studentWindow = new Ext.Window({ 
		layout: 'form',
		height: 200, 
		width: 300,
		resizable: false,
		closeAction: 'hide',
		items: [
			{ xtype: 'textfield', fieldLabel: 'Name' },
			{ xtype: 'textfield', fieldLabel: 'Student number' },			
		] 
	});
	
	var selectedNode;
	
	function treeContextHandler(node) { 
		node.select(); 
		contextMenu.show(node.ui.getAnchor());
	}
	
	function copyHandler() {
		selectedNode = tree.getSelectionModel().getSelectedNode();		
	}
	
	function pasteHandler() {
		var parent = tree.getSelectionModel().getSelectedNode();
		if ( ! parent.leaf ) {
			// parent.appendChild(clone(selectedNode));
		}
	}
	
	function deleteHandler() { 
		var node = tree.getSelectionModel().getSelectedNode();
		console.log(node);
		// Ext.Ajax.request({ 
		// 	url: '/delete', 
		// 	params: {
		// 		nodeid: node.id, 
		// 		leaf: node.leaf
		// 	} 
		// });
		// tree.getSelectionModel().getSelectedNode().remove();
	}
	
	function addHandler() {
		studentWindow.title = 'Add student';
		studentWindow.show();
	}	
	
	function editHandler() {
		studentWindow.title = 'Edit student';
		studentWindow.show();		
	}
	function copyMouseHandler(de) {
		if (de.rawEvent.ctrlKey) {
			// console.log(de);
			de.dropNode = new Ext.tree.TreeNode(de.dropNode.attributes);
			var newParent = de.target.id;
			var currentNodeId = de.dropNode.id;
			var isLeaf = de.leaf;
			Ext.Ajax.request({ 
				url: '/copy', 
				params: {
					nodeid: currentNodeId, 
					newparentid: newParent,
					leaf: isLeaf,
					append: 'true'
				} 
			});						
		}
		return true;
	}

    tree.render('tree-div');
    tree.getRootNode().expand();
	
	tree.on('beforemovenode', function(tree, node, oldParent, newParent, index) {
		if ( !newParent.leaf ) {
			Ext.Ajax.request({ 
				url: '/move', 
				params: {
					nodeid: node.id, 
					newparentid: newParent.id, 
					oldparentid: oldParent.id, 
					dropindex: index,
					leaf: node.leaf
				} 
			});			
		} else {
			Ext.Msg.alert("Error", "You can't move group to user");
			return false;
		}
	});	
	tree.on('contextmenu', treeContextHandler);
	tree.on("beforenodedrop", copyMouseHandler);
});
</script>

<div id="tree-div"></div>
<div id="sel">-</div>