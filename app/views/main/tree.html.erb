<script>

Ext.onReady(function() {
	
	var Tree = Ext.tree;
	
    var tree = new Tree.TreePanel({
        useArrows: true,
        autoScroll: true,
		width: 200,
        animate: true,
        enableDD: true,
        containerScroll: true,
        border: true,
        dataUrl: '/gettree',

        root: {
            nodeType: 'async',
            text: 'People',
            draggable: false,
            id: '1'
        }
    });

	var contextMenu = new Ext.menu.Menu({
		items: [
			{ text: 'Add user', handler: addHandler },
			{ text: 'Add group', handler: addGroupHandler },
			{ text: 'Edit', handler: editHandler },
			{ text: 'Delete', handler: deleteHandler },
			{ text: 'Copy', handler: copyHandler },
			{ text: 'Paste', handler: pasteHandler, disabled: "true" },
			{ text: 'Delete from group', handler: delfromHandler}
		]
	});
	
	var addWindow = new Ext.Window({ 
		layout: 'form',
		height: 250, 
		width: 300,
		resizable: false,
		url: '/lol',
		closeAction: 'hide',
		items: [
			{ xtype: 'radio', fieldLabel: 'Student', name: 'userType', handler: userTypeChangeHandler, checked: true},
			{ xtype: 'radio', fieldLabel: 'Tutor', name: 'userType' },			
			{ xtype: 'textfield', fieldLabel: 'Name', allowBlank: false, id: "name-field" },
			{ xtype: 'textfield', fieldLabel: 'Username', allowBlank: false, id: "username-field" },			
			{ xtype: 'textfield', fieldLabel: 'Student number', allowBlank: false, id: "stud-num-field" },			
			{ xtype: 'textfield', fieldLabel: 'Tutor position', id: "tutor-position-field", hidden: true },
			{ xtype: 'textfield', fieldLabel: 'Tutor grade', id: "tutor-grade-field", hidden: true },
		],
		buttons: [
			{
				text: 'Apply',
				handler: function() {
					var parent = tree.getSelectionModel().getSelectedNode();
					Ext.Ajax.request({ 
						url: '/adduser',
						success: function(response) {
							newId = response.responseText;
							parent.appendChild(new Ext.tree.TreeNode({
								id: newId,
								text: addWindow.get('username-field').getValue()
							}));
							addWindow.get('name-field').setValue('');
							addWindow.get('username-field').setValue('');
							addWindow.get('stud-num-field').setValue('');
							addWindow.get('tutor-position-field').setValue('');
							addWindow.get('tutor-grade-field').setValue('');
							addWindow.hide();
						},
						failure: function() {
							Ext.Msg.alert("Error", "Unable to add user");
						},
						params: {
							group: parent.id,
							name: addWindow.get('name-field').getValue(),
							type: addWindow.get(0).getValue(),
							username: addWindow.get('username-field').getValue(),															
							studNumber: addWindow.get('stud-num-field').getValue(),
							position: addWindow.get('tutor-position-field').getValue(),
							grade: addWindow.get('tutor-grade-field').getValue()
						} 
					});					
				},
			},
			{
				text: 'Cancel',
				handler: function() {
					addWindow.hide();
				}
			}
		] 
	});
	
	var selectedNode;
	
	function userTypeChangeHandler(a, b, c) {
		if (b) {
			addWindow.get('stud-num-field').show();
			addWindow.get('tutor-position-field').hide();
			addWindow.get('tutor-grade-field').hide();
		} else {
			addWindow.get('tutor-position-field').show();
			addWindow.get('tutor-grade-field').show();
			addWindow.get('stud-num-field').hide();
		}
	}
	
	function treeContextHandler(node) { 
		node.select(); 
		if (node.leaf == 'true') {
			contextMenu.get(0).hide();
			contextMenu.get(1).hide();
			contextMenu.get(4).show();
			contextMenu.get(5).show();
		} else {
			contextMenu.get(0).show();
			contextMenu.get(1).show();
			contextMenu.get(4).hide();
			if (selectedNode) {
				contextMenu.get(5).show();
				contextMenu.get(5).enable();
			} else {
				contextMenu.get(5).hide();
				contextMenu.get(5).disable();
			}
			
		}
		contextMenu.show(node.ui.getAnchor());
	}
	
	function delfromHandler() {
		var node = tree.getSelectionModel().getSelectedNode();
		var parentId = node.parentNode.id;
		Ext.Ajax.request({ 
			url: '/delfrom', 
			params: {
				nodeid: node.id.slice(0, -1), 
				parentid: parentId,
				leaf: node.leaf
			}
		});		
	}

	function addGroupHandler() {
		var parent = tree.getSelectionModel().getSelectedNode();
		var newId;
		var newDesc;
		Ext.Msg.prompt("Create group?", "Type group description", function (btn, text) {
			newDesc = text;
			Ext.Ajax.request({ 
				url: '/addgroup',
				success: function (response) {
					newId = response.responseText;
				},
				params: {
					desc: text,
					parentid: parent.id
				} 
			});
			parent.appendChild(new Ext.tree.TreeNode({
				id: newId,
				text: newDesc
			}));
		});
	}
	
	function copyHandler() {
		selectedNode = tree.getSelectionModel().getSelectedNode();		
	}
	
	function pasteHandler() {
		var parent = tree.getSelectionModel().getSelectedNode();
		if ( ! parent.leaf ) {
			var currentNodeId = selectedNode.id;
			var newParent = parent.id;
			var isLeaf = selectedNode.leaf;
			parent.appendChild(new Ext.tree.TreeNode(selectedNode.attributes));			
			Ext.Ajax.request({ 
				url: '/copy', 
				params: {
					nodeid: currentNodeId, 
					newparentid: newParent,
					leaf: isLeaf,
					append: 'true'
				}
			});
			selectedNode = null;
		}
	}
	
	function deleteHandler() { 
		var node = tree.getSelectionModel().getSelectedNode();
		Ext.Ajax.request({ 
			url: '/delete', 
			params: {
				nodeid: node.id, 
				leaf: node.leaf
			} 
		});
		tree.getSelectionModel().getSelectedNode().remove();
	}
	
	function addHandler() {
		addWindow.title = 'Add user';
		addWindow.show();
	}	
	
	function editHandler() {
		var node = tree.getSelectionModel().getSelectedNode();
		if (node.leaf != 'true') {
			Ext.Msg.prompt("Edit group?", 'Edit groups description', function (btn, text) {
				if (text != '') {
					Ext.Ajax.request({ 
						url: '/updategroup', 
						params: {
							nodeid: node.id, 
							desc: text
						} 
					});
					node.setText(text);					
				}
			}, null, null, node.attributes.text);
		} else {
			addWindow.title = 'Edit user';
			addWindow.show();	
		}		
	}
	
	function copyMouseHandler(de) {
		if (de.rawEvent.ctrlKey) {
			de.dropNode = new Ext.tree.TreeNode(de.dropNode.attributes);
			var newParent = de.target.id;
			var currentNodeId = de.dropNode.id;
			var isLeaf = de.leaf;
			Ext.Ajax.request({ 
				url: '/copy', 
				params: {
					nodeid: currentNodeId, 
					newparentid: newParent,
					leaf: isLeaf,
					append: 'true'
				} 
			});						
		}
		return true;
	}

    tree.render('tree-div');
    tree.getRootNode().expand();
	
	tree.on('beforemovenode', function(tree, node, oldParent, newParent, index) {
		if ( !newParent.leaf ) {
			Ext.Ajax.request({ 
				url: '/move', 
				params: {
					nodeid: node.id, 
					newparentid: newParent.id, 
					oldparentid: oldParent.id, 
					dropindex: index,
					leaf: node.leaf
				} 
			});			
		} else {
			Ext.Msg.alert("Error", "You can't move group to user");
			return false;
		}
	});	
	tree.on('contextmenu', treeContextHandler);
	tree.on("beforenodedrop", copyMouseHandler);
});
</script>

<div id="tree-div"></div>
<div id="sel">-</div>